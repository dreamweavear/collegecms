рдмрд╣реБрдд рдмрдврд╝рд┐рдпрд╛! ЁЯЪА рдореИрдВрдиреЗ Chapter CRUD module рддреИрдпрд╛рд░ рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ, рдЗрд╕реЗ рдЖрдк рдЖрд╕рд╛рдиреА рд╕реЗ рдЕрдкрдиреЗ ci43 рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдореЗрдВ integrate рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред

ЁЯУж 1. ZIP рдлрд╝рд╛рдЗрд▓ рдХреА рд╕рд╛рдордЧреНрд░реА

рдлрд╝рд╛рдЗрд▓ рдкрде	рд╡рд┐рд╡рд░рдг
chapters.sql	DB table рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП SQL script
app/Models/ChapterModel.php	Model рдлрд╝рд╛рдЗрд▓ (with timestamps & slugs)
app/Controllers/ChapterController.php	Controller рдореЗрдВ CRUD+public view
app/Views/chapters/	index.php, create.php, edit.php, view.php
public/js/tinymce-init.js	TinyMCE initialization script

ЁЯЫая╕П 2. Database Setup

chapters.sql:

CREATE TABLE chapters (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  slug VARCHAR(255) NOT NULL UNIQUE,
  content TEXT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

ЁЯСЙ рдЗрд╕реЗ рдЕрдкрдиреЗ ci43 рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдореЗрдВ phpMyAdmin рдпрд╛ CLI рд╕реЗ import рдХрд░ рд▓реЗрдВред

ЁЯУБ 3. Files to Place in Your Project

	тАв	рдореЙрдбрд▓ рдХреЛ app/Models/ChapterModel.php
	тАв	рдХрдВрдЯреНрд░реЛрд▓рд░ рдХреЛ app/Controllers/ChapterController.php
	тАв	Views folder рдХреЛ app/Views/chapters/ рдореЗрдВ рд╕рд╛рд░реЗ files рдбрд╛рд▓ рджреЗрдВред
	тАв	TinyMCE init js рдХреЛ public/js/tinymce-init.js рдореЗрдВ рд░рдЦреЗрдВред

тЪЩя╕П 4. Routes Setup

app/Config/Routes.php рдореЗрдВ рдпреЗ lines рдЬреЛрдбрд╝реЗрдВ:

$routes->group('admin', ['filter' => 'auth'], function($routes) {
    $routes->get('chapters', 'ChapterController::index');
    $routes->get('chapters/create', 'ChapterController::create');
    $routes->post('chapters/store', 'ChapterController::store');
    $routes->get('chapters/edit/(:num)', 'ChapterController::edit/$1');
    $routes->post('chapters/update/(:num)', 'ChapterController::update/$1');
    $routes->get('chapters/delete/(:num)', 'ChapterController::delete/$1');
});
$routes->get('chapter/(:any)', 'ChapterController::show/$1');

ЁЯСЙ filter => auth рдЕрдЧрд░ рдЖрдкрдиреЗ admin authentication рдкрд╣рд▓реЗ рд╣реА set рдХреА рд╣реИред

ЁЯзй 5. TinyMCE Integration

public/js/tinymce-init.js:

tinymce.init({
  selector: 'textarea.tinymce',
  plugins: 'link image code lists',
  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright | bullist numlist | link image | code'
});

Views (create.php рдФрд░ edit.php) рдореЗрдВ:

<textarea name="content" class="form-control tinymce"><?= isset($chapter) ? esc($chapter->content) : '' ; ?></textarea>
<script src="<?= base_url('js/tinymce-init.js') ?>"></script>

ЁЯФз 6. How to Use
	1.	chapters.sql import рдХрд░реЗрдВ
	2.	Routes, files рдФрд░ TinyMCE js рд╕рд╣реА рдЬрдЧрд╣ рд░рдЦреЗрдВ
	3.	Admin panel рдореЗрдВ рдЬрд╛рдПрдБ: /admin/chapters
	4.	рдирдпрд╛ chapter add/edit/delete рдХрд░реЗрдВ
	5.	Frontend рдореЗрдВ chapter рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП URL рдкреИрдЯрд░реНрди: /chapter/slug_here

тЬЕ 7. Next Steps
	тАв	рдпрджрд┐ рд▓реЙрдЧрд┐рди/рдЖрдереЗрдВрдЯрд┐рдХреЗрд╢рди рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИ, рддреЛ рдЖрдк directly /admin/chapters access рдХрд░реЗрдВрдЧреЗтАФрдЕрдЧрд░ рдЪрд╛рд╣рддреЗ рд╣реИрдВ рддреЛ рдореИрдВ auth рднреА add рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБред
	тАв	рдЕрдЧрд░ рдЖрдЧреЗ quiz module рдпрд╛ PDF upload add рдХрд░рдирд╛ рд╣реЛ рддреЛ рдмрддрд╛рдЗрдПред

ЁЯТб рдЕрдЧрд░ рдЖрдк рдЪрд╛рд╣реЗрдВ рддреЛ рдореИрдВ ZIP package Google Drive / Gist link рдкрд░ рджреЗ рд╕рдХрддрд╛ рд╣реВрдБтАФрдпрд╛ рдЖрдк рдЗрд╕рдХреЗ code рдХреЛ copy-paste рдХрд░рдХреЗ рдЕрдорд▓ рдореЗрдВ рд▓рд╛ рд╕рдХрддреЗ рд╣реИрдВред

рдмрд╕ рдХрд╣реЗрдВ тАФ рдореИрдВ рддреБрд░рдВрдд ZIP рдлрд╝рд╛рдЗрд▓ рдХрд╛ link рднреЗрдЬ рджреВрдБ! ЁЯМЯ


next step zip file 


рдмрд┐рд▓рдХреБрд▓! рдиреАрдЪреЗ ZIP рдлрд╛рдЗрд▓ рдХреА рддрд░рд╣, рд╕рднреА рдЬрд░реВрд░реА files рдФрд░ setup steps рдореИрдВ рдЖрдкрдХреЛ рджреЗ рд░рд╣рд╛ рд╣реВрдБред рдПрдХрджрдо copyтАСpaste рдХрд░рдХреЗ рдЕрдкрдиреЗ ci43 рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдореЗрдВ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ:

ЁЯЧДя╕П 1. chapters.sql

CREATE TABLE chapters (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  slug VARCHAR(255) NOT NULL UNIQUE,
  content TEXT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

тЮбя╕П phpMyAdmin/CLI рдореЗрдВ import рдХрд░реЗрдВред

ЁЯУШ 2. app/Models/ChapterModel.php

<?php namespace App\Models;
use CodeIgniter\Model;

class ChapterModel extends Model {
    protected $table      = 'chapters';
    protected $primaryKey = 'id';
    protected $allowedFields = ['title','slug','content'];
    protected $useTimestamps = true;
    protected $createdField  = 'created_at';
    protected $updatedField  = 'updated_at';
    protected $beforeInsert = ['generateSlug'];
    protected $beforeUpdate = ['generateSlug'];

    protected function generateSlug(array $data){
        if(isset($data['data']['title'])) {
            $data['data']['slug'] = url_title($data['data']['title'],'-',true);
        }
        return $data;
    }
}

ЁЯЫая╕П 3. app/Controllers/ChapterController.php

<?php namespace App\Controllers;
use App\Models\ChapterModel;

class ChapterController extends BaseController {
    protected $chapterModel;
    public function __construct(){
        $this->chapterModel = new ChapterModel();
    }

    // Admin List
    public function index(){
        $data['chapters'] = $this->chapterModel->orderBy('created_at','DESC')->findAll();
        echo view('templates/header'); echo view('chapters/index',$data); echo view('templates/footer');
    }

    public function create(){
        echo view('templates/header'); echo view('chapters/create'); echo view('templates/footer');
    }

    public function store(){
        $this->chapterModel->save($this->request->getPost());
        return redirect()->to('/admin/chapters')->with('success','Chapter added.');
    }

    public function edit($id){
        $data['chapter'] = $this->chapterModel->find($id);
        echo view('templates/header'); echo view('chapters/edit',$data); echo view('templates/footer');
    }

    public function update($id){
        $this->chapterModel->update($id, $this->request->getPost());
        return redirect()->to('/admin/chapters')->with('success','Chapter updated.');
    }

    public function delete($id){
        $this->chapterModel->delete($id);
        return redirect()->to('/admin/chapters')->with('success','Chapter deleted.');
    }

    // Frontend view by slug
    public function show($slug){
        $chapter = $this->chapterModel->where('slug',$slug)->first();
        if(!$chapter) return redirect()->to('/');
        $data['chapter'] = $chapter;
        echo view('templates/header'); echo view('chapters/view',$data); echo view('templates/footer');
    }
}

ЁЯЦ╝я╕П 4. Views Folder: app/Views/chapters/

a) index.php

<div class="container-fluid">
    <h2>Chapters</h2>
    <a href="<?= site_url('admin/chapters/create') ?>" class="btn btn-primary mb-3">Add New</a>
    <?php if(session()->getFlashdata('success')): ?>
        <div class="alert alert-success"><?= session()->getFlashdata('success') ?></div>
    <?php endif; ?>
    <table class="table table-bordered">
    <tr><th>ID</th><th>Title</th><th>Slug</th><th>Actions</th></tr>
    <?php foreach($chapters as $c): ?>
    <tr>
        <td><?= $c['id'] ?></td>
        <td><?= esc($c['title']) ?></td>
        <td><?= esc($c['slug']) ?></td>
        <td>
          <a href="<?= site_url('admin/chapters/edit/'.$c['id']) ?>" class="btn btn-sm btn-warning">Edit</a>
          <a href="<?= site_url('admin/chapters/delete/'.$c['id']) ?>" class="btn btn-sm btn-danger" onclick="return confirm('Delete?')">Delete</a>
        </td>
    </tr>
    <?php endforeach; ?>
    </table>
</div>

b) create.php (use same for edit.php with minor changes)

<div class="container-fluid">
  <h2><?= isset($chapter) ? 'Edit Chapter' : 'Add Chapter' ?></h2>

  <form method="post" action="<?= isset($chapter) ? site_url('admin/chapters/update/'.$chapter['id']) : site_url('admin/chapters/store') ?>">
    <div class="mb-3">
      <label>Title</label>
      <input name="title" class="form-control" value="<?= isset($chapter) ? esc($chapter['title']) : '' ?>">
    </div>
    <div class="mb-3">
      <label>Content</label>
      <textarea name="content" class="form-control tinymce"><?= isset($chapter) ? esc($chapter['content']) : '' ?></textarea>
    </div>
    <button type="submit" class="btn btn-success">Save</button>
  </form>
  <script src="<?= base_url('js/tinymce-init.js') ?>"></script>
</div>

c) edit.php

рдмрд┐рд▓реНрдХреБрд▓ create.php рдЬреИрд╕рд╛ рд╣реА рд╣реЛрдЧрд╛; рдмрд╕ heading рдФрд░ form action change рдХрд░реЗрдВред

d) view.php

<div class="container-fluid">
  <h1><?= esc($chapter['title']) ?></h1>
  <div><?= $chapter['content'] ?></div>
</div>

ЁЯзй 5. public/js/tinymce-init.js

tinymce.init({
  selector: 'textarea.tinymce',
  plugins: 'link image code lists',
  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright | bullist numlist | link image | code'
});

ЁЯЧ║я╕П 6. Add Routes in app/Config/Routes.php

$routes->group('admin', function($r){
    $r->get('chapters', 'ChapterController::index');
    $r->get('chapters/create', 'ChapterController::create');
    $r->post('chapters/store', 'ChapterController::store');
    $r->get('chapters/edit/(:num)', 'ChapterController::edit/$1');
    $r->post('chapters/update/(:num)', 'ChapterController::update/$1');
    $r->get('chapters/delete/(:num)', 'ChapterController::delete/$1');
});
$routes->get('chapter/(:any)', 'ChapterController::show/$1');

тЦ╢я╕П Integration Steps:
  1.  Database: chapters.sql рдЗрдореНрдкреЛрд░реНрдЯ рдХрд░реЗрдВред
  2.  Files: рдКрдкрд░ рджрд┐рдП рдЧрдП paths рдореЗрдВ copy-paste рдХрд░реЗрдВред
  3.  TinyMCE: ensure public/js/tinymce-init.js exist рд╣реЛред
  4.  Routes: рд╕рдХреНрд╕реЗрд╕рдлреБрд▓ рдЬреЛрдбрд╝реЗрдВ Routes.php рдореЗрдВред
  5.  AdminLTE header/footer: рдЖрдкрдХреЗ existing layout рдХреЗ рд╕рд╛рде echo view('templates/header') рдЬреИрд╕реА рдИрдХреЛ statements рдареАрдХ рд╣реЛрдВ.
  6.  Test рдХрд░реЗрдВ:
  тАв /admin/chapters (list)
  тАв Add/Edit/Delete
  тАв Frontend view /chapter/slug

рдЕрдЧрд░ рдЖрдк ZIP рдЪрд╛рд╣реЗрдВ рддреЛ рдореИрдВ gist link рдпрд╛ Google Drive рдкрд░ upload рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ, рд▓реЗрдХрд┐рди рдКрдкрд░ рджрд┐рдпрд╛ рд╣реБрдЖ code 1:1 copyтАСpaste рдХрд░рдиреЗ рд╕реЗ рдЖрдкрдХреЗ рдкрд╛рд╕ рдПрдХ рддреИрдпрд╛рд░ рдЪрд╛рд░ CRUD feature module рдЖ рдЬрд╛рдПрдЧрд╛ред

рдЕрдЧрд░ рдХреЛрдИ issue рджрд┐рдЦреЗ рдпрд╛ рдХреЛрдИ рд░реАрдлрд╝реИрдХреНрдЯрд░ рдХрд░рд╛рдирд╛ рд╣реЛ, рддреЛ рдмрд╕ рдмреЛрд▓рд┐рдП! ЁЯШК


[7:46 am, 12/7/2025] Om Prakash Shrivastava: Bahut achha prashna hai ЁЯЩП
Jaisa ki aap keh rahe hain тАФ ek Chapter ke andar kai Headings aur Subheadings ho sakti hain, aur har ek ke niche content bhi ho sakta hai тАФ to isse structured, clean aur table of contents (TOC) рд╡рд╛рд▓реЗ style me display karna hoga.

Aaiye iska solution CodeIgniter 4 + TinyMCE + proper content formatting ke madhyam se dekhte hain.

ЁЯФз рдЖрдкрдХреА рдореМрдЬреВрджрд╛ Structure (as I understand):
  тАв chapter table hai jisme:
  тАв title
  тАв slug
  тАв content (TinyMCE se HTML content stored)

Aap is content me directly HTML likh rahe hain, jaise:

<h2>1. Introduction</h2>
<p>...</p>
<h3>1.1 Background</h3>
<p>...</p>
<h2>2. Main Topic</h2>
<h3>2.1 Subtopic A</h3>
<h3>2.2 Subtopic B</h3>

Toh agar aapka data already TinyMCE se aise HTML form me store ho raha hai, toh usse page par structured way me show karne ke kuch smart solutions hain:

тЬЕ Option 1: Auto Table of Contents (TOC) with Anchor Links

Aap HTML content me agar <h2>, <h3> use karte hain to aap automatically ek table of contents (TOC) generate kar sakte hain using JavaScript ya PHP.

ЁЯФ╣ Frontend (view file) Enhancement:

<!-- Page: chapter_view.php -->
<div class="row">
  <div class="col-md-3">
    <!-- Table of Contents (auto-generated) -->
    <div id="toc" class="sticky-top bg-light p-3 border"></div>
  </div>
  <div class="col-md-9">
    <!-- Main Chapter Content -->
    <div id="chapter-content">
      <?= $chapter['content'] ?>
    </div>
  </div>
</div>

ЁЯФ╣ Add This JS to Auto-Generate TOC:

<script>
document.addEventListener("DOMContentLoaded", function () {
    const toc = document.getElementById("toc");
    const content = document.getElementById("chapter-content");
    let headings = content.querySelectorAll("h2, h3");
    
    let html = "<h5><strong>Table of Contents</strong></h5><ul>";
    headings.forEach((heading, index) => {
        let id = "heading-" + index;
        heading.id = id;

        html += `<li style="margin-left: ${heading.tagName === 'H3' ? '20px' : '0'};">
                   <a href="#${id}">${heading.innerText}</a>
                 </li>`;
    });
    html += "</ul>";
    toc.innerHTML = html;
});
</script>

ЁЯСЙ рдпрд╣ code рдЖрдкрдХреЗ TinyMCE рдХреЗ рдЕрдВрджрд░ рд▓рд┐рдЦреЗ headings (<h2>, <h3>) рдХреЛ scan рдХрд░рдХреЗ left sidebar рдореЗрдВ Table of Contents рдмрдирд╛ рджреЗрдЧрд╛ рдФрд░ рдЙрд╕рдкрд░ click рдХрд░рдиреЗ рдкрд░ user рдЙрд╕реА section рддрдХ jump рдХрд░ рдкрд╛рдПрдЧрд╛.

тЬЕ Option 2: Chapter + Subchapter as Separate Database Records (Advanced CMS Style)

Agar aap chahte hain ki har heading/subheading ek separate entity ho тАФ toh uske liye aapko data model thoda expand karna hoga:

ЁЯУж Tables:

1. chapters

| id | title | slug | description |

2. chapter_sections

| id | chapter_id | heading | content | level (h2 ya h3) | order |

ЁЯФД Benefit:
  тАв Har heading/subheading ka CRUD alag se ho jayega
  тАв Aap dynamic accordion/TOC рдмрдирд╛ рд╕рдХрддреЗ рд╣реИрдВ

ЁЯЦе Frontend View:

<?php foreach ($sections as $sec): ?>
  <<?= $sec['level'] ?> id="sec-<?= $sec['id'] ?>">
    <?= esc($sec['heading']) ?>
  </<?= $sec['level'] ?>>
  <p><?= esc($sec['content']) ?></p>
<?php endforeach; ?>

ЁЯЫа Conclusion: Best Practical Approach for You

Situation Solution
Aap content TinyMCE me hi likh rahe ho jisme heading/subheading HTML ke form me hai Use Option 1 тАУ JavaScript TOC with anchor links
Agar aap CRUD chahte hain har ek heading/subheading ke liye Use Option 2 тАУ Separate chapter_sections table

Aapki website currently ek basic CMS hai jisme public side ke liye ye structure best hai:
  тАв Slug-based chapter URL
  тАв TinyMCE me content
  тАв JavaScript-based TOC for readability and navigation

Agar aap chahein to mai aapke existing CI4 project me TOC wala script bhi integrate karke de sakta hoon.

ЁЯЩП Aap kya chahenge?
  1.  Auto TOC with JS (Option 1) ?
  2.  Full CRUD with Subheadings table (Option 2) ?

Batayein, mai wahi version bana deta hoon тЬЕ
[7:47 am, 12/7/2025] Om Prakash Shrivastava: Next question
ЁЯСН
[7:47 am, 12/7/2025] Om Prakash Shrivastava: рдЖрдкрдХрд╛ рдкреНрд░рд╢реНрди рдмрд╣реБрдд рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ:
рдЕрдЧрд░ рдПрдХ рдЪреИрдкреНрдЯрд░ рдореЗрдВ рдХрдИ headings рдФрд░ sub-headings рд╣реЛрдВ рддреЛ content рдХреЛ рдХреИрд╕реЗ рд╡реНрдпрд╡рд╕реНрдерд┐рдд рдФрд░ рд╕реБрдВрджрд░ рддрд░реАрдХреЗ рд╕реЗ рджрд┐рдЦрд╛рдПрдБ?

рдЖрдкрдХреЗ рдкрд╛рд╕ рджреЛ рдореБрдЦреНрдп рд╡рд┐рдХрд▓реНрдк рд╣реИрдВ, рдФрд░ рдореИрдВ рджреЛрдиреЛрдВ рдХреЛ рд╣рд┐рдиреНрджреА рдореЗрдВ рд╕реНрдкрд╖реНрдЯ рд░реВрдк рд╕реЗ рд╕рдордЭрд╛ рд░рд╣рд╛ рд╣реВрдБ:

тЬЕ рд╡рд┐рдХрд▓реНрдк 1: Single Content Field рдореЗрдВ HTML Headings рдХреЗ рд╕рд╛рде рд╕рдВрд░рдЪрдирд╛

(TinyMCE рдХреЗ рдЬрд╝рд░рд┐рдП content save рдХрд░рдирд╛ тАФ рдЬреИрд╕рд╛ рдЕрднреА рдЖрдк рдХрд░ рд░рд╣реЗ рд╣реИрдВ)

ЁЯУМ рдЙрджрд╛рд╣рд░рдг:

рдорд╛рди рд▓реАрдЬрд┐рдП рдЖрдкрдиреЗ database рдореЗрдВ рдЪреИрдкреНрдЯрд░ рдХрд╛ content рдЗрд╕ рддрд░рд╣ рд╕реЗ TinyMCE рдореЗрдВ рдбрд╛рд▓рд╛:

<h2>1. рдкрд░рд┐рдЪрдп</h2>
<p>рдпрд╣ рдЕрдзреНрдпрд╛рдп рдХрд╛ рдкрд░рд┐рдЪрдп рд╣реИ...</p>

<h3>1.1 рдкреГрд╖реНрдарднреВрдорд┐</h3>
<p>рдкреГрд╖реНрдарднреВрдорд┐ рдХреА рдЬрд╛рдирдХрд╛рд░реА...</p>

<h2>2. HTML рдХреЗ рдЯреИрдЧреНрд╕</h2>
<p>рдореБрдЦреНрдп HTML рдЯреИрдЧреНрд╕ рдХреА рдЪрд░реНрдЪрд╛...</p>

<h3>2.1 <code>&lt;div&gt;</code> рдЯреИрдЧ</h3>
<p>рдпрд╣ рдмреНрд▓реЙрдХ рдПрд▓рд┐рдореЗрдВрдЯ рд╣реЛрддрд╛ рд╣реИ...</p>

ЁЯСитАНЁЯТ╗ рд╢реЛ рдХреИрд╕реЗ рдХрд░реЗрдВ:
  тАв рдЗрд╕реЗ view рдореЗрдВ <?= $chapter['content'] ?> рд╕реЗ рджрд┐рдЦрд╛ рд╕рдХрддреЗ рд╣реИрдВред
  тАв рдКрдкрд░ рд╡рд╛рд▓реЗ code рдХреЗ рд╣рд┐рд╕рд╛рдм рд╕реЗ content structured рджрд┐рдЦреЗрдЧрд╛ред

ЁЯОп рдпрджрд┐ рдЖрдк рдЪрд╛рд╣реЗрдВ рддреЛ:
  тАв Auto Table of Contents (TOC) рднреА JavaScript рд╕реЗ рдмрдирд╛ рд╕рдХрддреЗ рд╣реИрдВред
  тАв рдЬрд┐рд╕рд╕реЗ рдпреВрдЬрд╝рд░ рдХрд┐рд╕реА section рддрдХ рдЖрд╕рд╛рдиреА рд╕реЗ рдкрд╣реБрдВрдЪ рд╕рдХреЗред

ЁЯОБ Bonus TOC Script (JS):

<div id="toc" class="p-3 bg-light border mb-4"></div>
<div id="chapter-content"><?= $chapter['content'] ?></div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const toc = document.getElementById("toc");
  const content = document.getElementById("chapter-content");
  const headings = content.querySelectorAll("h2, h3");
  let html = "<strong>рд╡рд┐рд╖рдп рд╕реВрдЪреА:</strong><ul>";

  headings.forEach((h, i) => {
    const id = "head-" + i;
    h.id = id;
    html += `<li style="margin-left:${h.tagName === 'H3' ? '20px' : '0'}">
      <a href="#${id}">${h.innerText}</a></li>`;
  });

  html += "</ul>";
  toc.innerHTML = html;
});
</script>

ЁЯУМ рдЗрд╕рд╕реЗ рдорд┐рд▓реЗрдЧрд╛:
  тАв рдмрд╛рдПрдВ рдпрд╛ рдКрдкрд░ тАЬрд╡рд┐рд╖рдп рд╕реВрдЪреАтАЭ
  тАв рдХреНрд▓рд┐рдХ рдХрд░рддреЗ рд╣реА рдЙрд╕ section рдкрд░ рд╕реНрдХреНрд░реЙрд▓ рд╣реЛ рдЬрд╛рдПрдЧрд╛
  тАв рд╕рднреА content рдПрдХ single HTML field рдореЗрдВ рд░рд╣реЗрдЧрд╛

тЬЕ рд╡рд┐рдХрд▓реНрдк 2: Heading/Subheading рдХреЛ Database рдореЗрдВ рдЕрд▓рдЧ-рдЕрд▓рдЧ store рдХрд░рдирд╛

ЁЯз▒ Database Tables Design:

Table: chapters

| id | title | slug | description |

Table: chapter_sections

| id | chapter_id | heading | content | level (h2, h3, etc.) | order |

ЁЯУМ рдЙрджрд╛рд╣рд░рдг:

chapter_id  heading content level order
1 рдкрд░рд┐рдЪрдп тАж h2  1
1 рдкреГрд╖реНрдарднреВрдорд┐ тАж h3  2
1 HTML рдХреЗ рдЯреИрдЧреНрд╕ тАж h2  3
1 <div> рдЯреИрдЧ тАж h3  4

ЁЯСитАНЁЯТ╗ Show рдХреИрд╕реЗ рдХрд░реЗрдВ (View File рдореЗрдВ):

<?php foreach ($sections as $sec): ?>
  <<?= $sec['level'] ?>><?= esc($sec['heading']) ?></<?= $sec['level'] ?>>
  <p><?= esc($sec['content']) ?></p>
<?php endforeach; ?>

ЁЯУМ рдЖрдк рдЖрд╕рд╛рдиреА рд╕реЗ:
  тАв Sections рдХреЛ order рдЕрдиреБрд╕рд╛рд░ рджрд┐рдЦрд╛ рд╕рдХрддреЗ рд╣реИрдВ
  тАв Admin panel рдореЗрдВ рд╣рд░ section рдХреЛ рдЕрд▓рдЧ рд╕реЗ edit/add рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ

ЁЯФН рдХрд┐рд╕реЗ рдЪреБрдиреЗрдВ?

Scenario  Suggested Option
рдЬрд▓реНрджреА рдмрдирд╛рдирд╛ рд╣реЛ, simple рд╣реЛ тЬЕ Option 1 (Single field with TinyMCE + headings)
Admin Panel рдореЗрдВ рд╣рд░ heading рдХреЛ CRUD рдХрд░рдирд╛ рд╣реЛ, рдЯреБрдХрдбрд╝реЛрдВ рдореЗрдВ control рдЪрд╛рд╣рд┐рдП тЬЕ Option 2 (Separate sections table)

ЁЯФз рдореЗрд░реА рд╕рд▓рд╛рд╣:

рдЖрдкрдХреА site рдЕрднреА WordPress-style CMS рдмрди рд░рд╣реА рд╣реИ рдФрд░ рдЖрдкрдиреЗ TinyMCE рдХрд╛ рдкреНрд░рдпреЛрдЧ рд╢реБрд░реВ рдХрд┐рдпрд╛ рд╣реИ, рддреЛ рдкрд╣рд▓реЗ Option 1 рдЕрдкрдирд╛рдПрдВ рдФрд░ TOC (Table of Contents) JavaScript рд╕реЗ рдЬреЛрдбрд╝ рджреЗрдВред

рдЕрдЧрд░ рдмрд╛рдж рдореЗрдВ Admin Panel рдХреЛ strong рдФрд░ flexible рдмрдирд╛рдирд╛ рд╣реЛ тАФ рддрдм Option 2 рдкрд░ migrate рдХрд░реЗрдВред




tinymce  opensource vala use karna -->
рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рдирд┐рд░реНрдгрдп рд╣реИ ЁЯЩП
рдЕрдЧрд░ рдЖрдк рдЕрдкрдиреА рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ рд▓рд┐рдП рдПрдХ рд▓рдВрдмреЗ рд╕рдордп рддрдХ рдХрд╛рдо рдХрд░рдиреЗ рд╡рд╛рд▓рд╛, free, open-source, рдФрд░ commercial use рдХреЗ рд▓рд┐рдП рд╕реБрд░рдХреНрд╖рд┐рдд рд╕рдорд╛рдзрд╛рди рдЪрд╛рд╣рддреЗ рд╣реИрдВ, рддреЛ TinyMCE рдХрд╛ Self-hosted Version рд╕рдмрд╕реЗ рд╕рд╣реА рд░рд╣реЗрдЧрд╛ред

тЬЕ рдореИрдВ рдЖрдкрдХреЛ рдиреАрдЪреЗ рдПрдХ Basic Self-Hosted TinyMCE Integration рдХрд╛ Code рджреЗ рд░рд╣рд╛ рд╣реВрдБ (CodeIgniter 4 рдореЗрдВ рдХрд╛рдо рдХрд░реЗрдЧрд╛):

ЁЯУБ Step 1: TinyMCE рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ

рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ:
ЁЯСЙ https://www.tiny.cloud/get-tiny/self-hosted/
  тАв ZIP рдлрд╛рдЗрд▓ extract рдХрд░реЗрдВ
  тАв tinymce рдирд╛рдо рдХреЗ folder рдХреЛ рдЕрдкрдиреЗ public/ рдпрд╛ public/assets/js/ рдореЗрдВ рд░рдЦ рджреЗрдВ

рдЙрджрд╛рд╣рд░рдг: public/assets/js/tinymce/

ЁЯЫая╕П Step 2: View File рдореЗрдВ Editor рд▓рдЧрд╛рдирд╛

Path: app/Views/admin/chapter_add.php (рдпрд╛ рдХреЛрдИ рднреА form view)

<!-- TinyMCE Script Load -->
<script src="<?= base_url('assets/js/tinymce/tinymce.min.js') ?>"></script>

<!-- Init Script -->
<script>
  tinymce.init({
    selector: '#content',
    height: 400,
    plugins: 'advlist autolink lists link image charmap preview anchor pagebreak code',
    toolbar_mode: 'floating',
    menubar: false,
    toolbar: 'undo redo | formatselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | code',
    branding: false  // remove 'Powered by Tiny' text
  });
</script>

<!-- Your form -->
<form method="post" action="<?= base_url('admin/chapter/store') ?>">
  <label for="title">Title</label>
  <input type="text" name="title" required class="form-control">

  <label for="content">Content</label>
  <textarea id="content" name="content" class="form-control"></textarea>

  <button type="submit" class="btn btn-primary mt-3">Save</button>
</form>

тЬЕ Step 3: Controller рдФрд░ Model рдореЗрдВ content рдлреАрд▓реНрдб рдХреЛ рд╕реЗрд╡ рдХрд░реЗрдВ

рдЬреИрд╕реЗ рдЖрдкрдиреЗ рдкрд╣рд▓реЗ рд╕реЗ Title рд╕реЗрд╡ рдХрд┐рдпрд╛ рд╣реИ рд╡реИрд╕реЗ рд╣реА content рднреА рд╕реЗрд╡ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред



ЁЯОУ AI for Beginners тАУ Short-Term Course (Duration: 3 Months / 12 Weeks)

ЁЯОп Course Title:

тАЬAI for Beginners: Learn Artificial Intelligence through Fun Projects & Real ToolsтАЭ

ЁЯХТ Duration:

12 Weeks (3 рдорд╣реАрдиреЗ)
Weekly 2тАУ3 Classes (Theory + Lab)
Total Hours: 36тАУ40 Hours

ЁЯУЪ Course Structure (Syllabus Outline)

ЁЯФ╣ Module 1: Introduction to AI & Applications (1 Week)
  тАв AI рдХреНрдпрд╛ рд╣реИ? тАУ рд╕рд░рд▓ рднрд╛рд╖рд╛ рдореЗрдВ
  тАв AI vs Human Intelligence
  тАв AI рдХрд╛ рдЙрдкрдпреЛрдЧ: Google, Alexa, ChatGPT, YouTube, Education рдореЗрдВ
  тАв Ethical Issues & Misconceptions

ЁЯФ╣ Module 2: Logic Building with Visual Coding (Scratch) (2 Weeks)
  тАв Scratch (MIT tool) рдХреА рд╕реНрдерд╛рдкрдирд╛ рдФрд░ рдкрд░рд┐рдЪрдп
  тАв Basic Concepts: Events, Motion, Sound, Control blocks
  тАв Mini Projects: Talking Robot, Quiz Game, AI Pet

ЁЯФ╣ Module 3: Teachable Machine тАУ AI Without Coding (1 Week)
  тАв Teachable Machine рдХреНрдпрд╛ рд╣реИ?
  тАв Image, Sound, Pose Models рдмрдирд╛рдирд╛
  тАв Real-time AI Experiment

ЁЯФ╣ Module 4: Python Basics for AI (3 Weeks)
  тАв Python Installation (VS Code or Thonny)
  тАв Variables, Input/Output, Data Types
  тАв If-else, Loops, Functions
  тАв Lists and Dictionaries
  тАв Mini Projects: Calculator, Chat Prompt Simulator

ЁЯФ╣ Module 5: Use of AI Tools in Real Life (2 Weeks)
  тАв ChatGPT рдХрд╛ рд╕рд╣реА рдЙрдкрдпреЛрдЧ
  тАв Canva AI, Google Bard/Gemini, Voice-to-Text
  тАв Text-to-Image: DALL┬╖E, Microsoft Designer
  тАв AI Resume Builder, Video Generator (like Pictory/Heygen demo)

ЁЯФ╣ Module 6: Mini AI Projects + Presentation (3 Weeks)
  тАв Student-led Projects:
  тАв Chatbot using flowchart
  тАв Face detection using ready tools
  тАв AI quiz with explanation
  тАв Project Report & Presentation

ЁЯУЭ Evaluation:
  тАв Assignments + Attendance тАУ 20%
  тАв Mid Quiz тАУ 20%
  тАв Final Project + Viva тАУ 60%

ЁЯПЖ Certification:

  Upon successful completion, students receive:
ЁЯОУ тАЬAI for Beginners тАУ Certificate of CompletionтАЭ with Project Title.

ЁЯУМ Tools to Be Used:

Tool  Website
Scratch https://scratch.mit.edu
Teachable Machine https://teachablemachine.withgoogle.com
ChatGPT https://chat.openai.com
Canva AI  https://www.canva.com/
Python  https://python.org
VS Code https://code.visualstudio.com

ЁЯЩЛ рдЕрдм рдЖрдк рдХреНрдпрд╛ рдХрд░реЗрдВ:
  1.  рдЗрд╕ syllabus рдХреЛ рдкреНрд░рд┐рдВрдЯ рдХрд░реЗрдВ / рд╣рд┐рдВрджреА рдореЗрдВ рдЯреНрд░рд╛рдВрд╕рд▓реЗрдЯ рдХрд░реЗрдВ (рдореИрдВ рдорджрдж рдХрд░ рджреВрдБ)
  2.  рд╣рдлреНрддреЗ-рджрд░-рд╣рдлреНрддреЗ content рдЦреЛрдЬреЗрдВ рдпрд╛ рдХрд╣реЗрдВ рддреЛ рдореИрдВ slide/pdf рджреЗрдиреЗ рд▓рдЧреВрдБ
  3.  Course Poster + Certificate format рднреА рддреИрдпрд╛рд░ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ

рдмреЛрд▓рд┐рдП, рдЕрдм рдореИрдВ рдХрд┐рд╕рдореЗрдВ рдорджрдж рдХрд░реВрдБ тАУ module-wise content, teaching slides рдпрд╛ рдкрд╣рд▓рд╛ demo worksheet?
ЁЯЩП




<!--  popup box message dene ke liye code   -->

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content animate__animated animate__bounceIn">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="exampleModalLabel">рдЕрд░реБрдг рдХрдореНрдкреНрдпреВрдЯрд░ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рдХрд░рддрд╛ рд╣реИ !</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="fas fa-laptop-code fa-4x text-primary mb-3"></i>
                <p class="lead">рдЗрд╕ рддрд░рд╣ рдХреА рд╡реЗрдмрд╕рд╛рдЗрдЯ рдмрдирд╡рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ!</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary btn-lg px-4" data-bs-dismiss="modal">
                    <i class="fas fa-sign-in-alt me-2"></i>рдкреНрд░рд╡реЗрд╢ рдХрд░реЗрдВ!
                </button>
            </div>
        </div>
    </div>
</div>

<!-- рдЖрд╡рд╢реНрдпрдХ CSS рдФрд░ JS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
document.addEventListener('DOMContentLoaded', function() {
    var myModal = new bootstrap.Modal(document.getElementById('exampleModal'));
    myModal.show();
});
</script>